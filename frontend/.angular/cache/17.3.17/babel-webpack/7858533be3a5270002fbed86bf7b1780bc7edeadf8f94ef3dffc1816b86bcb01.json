{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { cn } from '../../../../lib/utils';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"*\"];\nconst _c1 = (a0, a1) => ({\n  variant: a0,\n  size: a1\n});\nexport let ButtonComponent = /*#__PURE__*/(() => {\n  class ButtonComponent {\n    constructor() {\n      this.variant = 'default';\n      this.size = 'default';\n      this.className = '';\n      this.disabled = false;\n      this.type = 'button';\n      this.onClick = new EventEmitter();\n      this.cn = cn;\n      this.buttonVariants = props => {\n        const variants = {\n          default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n          destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n          outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n          secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n          ghost: 'hover:bg-accent hover:text-accent-foreground',\n          link: 'text-primary underline-offset-4 hover:underline'\n        };\n        const sizes = {\n          default: 'h-10 px-4 py-2',\n          sm: 'h-9 rounded-md px-3',\n          lg: 'h-11 rounded-md px-8',\n          icon: 'h-10 w-10'\n        };\n        return `${variants[props.variant]} ${sizes[props.size]} inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50`;\n      };\n    }\n    static {\n      this.ɵfac = function ButtonComponent_Factory(t) {\n        return new (t || ButtonComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ButtonComponent,\n        selectors: [[\"app-button\"]],\n        inputs: {\n          variant: \"variant\",\n          size: \"size\",\n          className: \"className\",\n          disabled: \"disabled\",\n          type: \"type\"\n        },\n        outputs: {\n          onClick: \"onClick\"\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 2,\n        vars: 7,\n        consts: [[3, \"click\", \"disabled\", \"type\"]],\n        template: function ButtonComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"button\", 0);\n            i0.ɵɵlistener(\"click\", function ButtonComponent_Template_button_click_0_listener($event) {\n              return ctx.onClick.emit($event);\n            });\n            i0.ɵɵprojection(1);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵclassMap(ctx.cn(ctx.buttonVariants(i0.ɵɵpureFunction2(4, _c1, ctx.variant, ctx.size)), ctx.className));\n            i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"type\", ctx.type);\n          }\n        },\n        dependencies: [CommonModule]\n      });\n    }\n  }\n  return ButtonComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}