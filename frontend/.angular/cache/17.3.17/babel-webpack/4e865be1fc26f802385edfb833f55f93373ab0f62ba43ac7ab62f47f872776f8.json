{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { cn } from '../../../../lib/utils';\nimport * as i0 from \"@angular/core\";\nexport let InputComponent = /*#__PURE__*/(() => {\n  class InputComponent {\n    constructor() {\n      this.type = 'text';\n      this.placeholder = '';\n      this.className = '';\n      this.disabled = false;\n      this.value = '';\n      this.onChange = value => {};\n      this.onTouched = () => {};\n      this.cn = cn;\n    }\n    onInput(event) {\n      const target = event.target;\n      this.value = target.value;\n      this.onChange(this.value);\n    }\n    writeValue(value) {\n      this.value = value || '';\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    static {\n      this.ɵfac = function InputComponent_Factory(t) {\n        return new (t || InputComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: InputComponent,\n        selectors: [[\"app-input\"]],\n        inputs: {\n          type: \"type\",\n          placeholder: \"placeholder\",\n          className: \"className\",\n          disabled: \"disabled\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: NG_VALUE_ACCESSOR,\n          useExisting: forwardRef(() => InputComponent),\n          multi: true\n        }]), i0.ɵɵStandaloneFeature],\n        decls: 1,\n        vars: 6,\n        consts: [[3, \"input\", \"blur\", \"type\", \"placeholder\", \"disabled\", \"value\"]],\n        template: function InputComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"input\", 0);\n            i0.ɵɵlistener(\"input\", function InputComponent_Template_input_input_0_listener($event) {\n              return ctx.onInput($event);\n            })(\"blur\", function InputComponent_Template_input_blur_0_listener() {\n              return ctx.onTouched();\n            });\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵclassMap(ctx.cn(\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\", ctx.className));\n            i0.ɵɵproperty(\"type\", ctx.type)(\"placeholder\", ctx.placeholder)(\"disabled\", ctx.disabled)(\"value\", ctx.value);\n          }\n        },\n        dependencies: [CommonModule]\n      });\n    }\n  }\n  return InputComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}