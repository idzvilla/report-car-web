{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ReportsService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api/v1';\n  }\n  requestReport(vin) {\n    return this.http.post(`${this.apiUrl}/reports/request`, {\n      vin\n    });\n  }\n  getReport(reportId) {\n    return this.http.get(`${this.apiUrl}/reports/${reportId}`);\n  }\n  downloadReport(reportId) {\n    return this.http.get(`${this.apiUrl}/reports/${reportId}/download`);\n  }\n  getUserReports() {\n    return this.http.get(`${this.apiUrl}/reports`);\n  }\n  static {\n    this.ɵfac = function ReportsService_Factory(t) {\n      return new (t || ReportsService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ReportsService,\n      factory: ReportsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ReportsService","constructor","http","apiUrl","requestReport","vin","post","getReport","reportId","get","downloadReport","getUserReports","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/test/Documents/Apps/CarFax Web/frontend/src/app/services/reports.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Report {\n  id: string;\n  vin: string;\n  user_id: string;\n  status: 'pending' | 'generating' | 'completed' | 'error';\n  price: number;\n  pdf_file_name?: string;\n  generated_at?: string;\n  created_at: string;\n  updated_at: string;\n  downloadUrl?: string;\n}\n\nexport interface RequestReportRequest {\n  vin: string;\n}\n\nexport interface RequestReportResponse {\n  reportId: string;\n  status: 'available' | 'payment_required' | 'generating';\n  downloadUrl?: string;\n  price?: number;\n  message?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportsService {\n  private apiUrl = 'http://localhost:3000/api/v1';\n\n  constructor(private http: HttpClient) { }\n\n  requestReport(vin: string): Observable<RequestReportResponse> {\n    return this.http.post<RequestReportResponse>(`${this.apiUrl}/reports/request`, { vin });\n  }\n\n  getReport(reportId: string): Observable<Report> {\n    return this.http.get<Report>(`${this.apiUrl}/reports/${reportId}`);\n  }\n\n  downloadReport(reportId: string): Observable<{ downloadUrl: string }> {\n    return this.http.get<{ downloadUrl: string }>(`${this.apiUrl}/reports/${reportId}/download`);\n  }\n\n  getUserReports(): Observable<Report[]> {\n    return this.http.get<Report[]>(`${this.apiUrl}/reports`);\n  }\n}\n"],"mappings":";;AAgCA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,8BAA8B;EAEP;EAExCC,aAAaA,CAACC,GAAW;IACvB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAwB,GAAG,IAAI,CAACH,MAAM,kBAAkB,EAAE;MAAEE;IAAG,CAAE,CAAC;EACzF;EAEAE,SAASA,CAACC,QAAgB;IACxB,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAS,GAAG,IAAI,CAACN,MAAM,YAAYK,QAAQ,EAAE,CAAC;EACpE;EAEAE,cAAcA,CAACF,QAAgB;IAC7B,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAA0B,GAAG,IAAI,CAACN,MAAM,YAAYK,QAAQ,WAAW,CAAC;EAC9F;EAEAG,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAW,GAAG,IAAI,CAACN,MAAM,UAAU,CAAC;EAC1D;;;uBAnBWH,cAAc,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdf,cAAc;MAAAgB,OAAA,EAAdhB,cAAc,CAAAiB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}