{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../loading-spinner/loading-spinner.component\";\nfunction VinInputComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" VIN \\u043D\\u043E\\u043C\\u0435\\u0440 \\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u0435\\u043D \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VinInputComponent_div_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" VIN \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0441\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u0442\\u044C \\u0440\\u043E\\u0432\\u043D\\u043E 17 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VinInputComponent_div_6_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" VIN \\u0441\\u043E\\u0434\\u0435\\u0440\\u0436\\u0438\\u0442 \\u043D\\u0435\\u0434\\u043E\\u043F\\u0443\\u0441\\u0442\\u0438\\u043C\\u044B\\u0435 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u044B \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VinInputComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, VinInputComponent_div_6_div_1_Template, 2, 0, \"div\", 6)(2, VinInputComponent_div_6_div_2_Template, 2, 0, \"div\", 6)(3, VinInputComponent_div_6_div_3_Template, 2, 0, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.vinForm.get(\"vin\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r0.vinForm.get(\"vin\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"minlength\"]) || ((tmp_2_0 = ctx_r0.vinForm.get(\"vin\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"maxlength\"]));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx_r0.vinForm.get(\"vin\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors[\"pattern\"]);\n  }\n}\nfunction VinInputComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043E\\u0442\\u0447\\u0451\\u0442\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VinInputComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵelement(1, \"app-loading-spinner\");\n    i0.ɵɵelementStart(2, \"span\", 10);\n    i0.ɵɵtext(3, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let VinInputComponent = /*#__PURE__*/(() => {\n  class VinInputComponent {\n    constructor(fb) {\n      this.fb = fb;\n      this.vinSubmitted = new EventEmitter();\n      this.isLoading = false;\n      this.vinForm = this.fb.group({\n        vin: ['', [Validators.required, Validators.minLength(17), Validators.maxLength(17), Validators.pattern(/^[A-HJ-NPR-Z0-9]{17}$/)]]\n      });\n    }\n    onVinInput(event) {\n      const value = event.target.value.toUpperCase();\n      event.target.value = value;\n      this.vinForm.patchValue({\n        vin: value\n      });\n    }\n    onSubmit() {\n      if (this.vinForm.valid) {\n        this.isLoading = true;\n        const vin = this.vinForm.get('vin')?.value;\n        this.vinSubmitted.emit(vin);\n      }\n    }\n    setLoading(loading) {\n      this.isLoading = loading;\n    }\n    resetForm() {\n      this.vinForm.reset();\n      this.isLoading = false;\n    }\n    static {\n      this.ɵfac = function VinInputComponent_Factory(t) {\n        return new (t || VinInputComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: VinInputComponent,\n        selectors: [[\"app-vin-input\"]],\n        outputs: {\n          vinSubmitted: \"vinSubmitted\"\n        },\n        decls: 10,\n        vars: 5,\n        consts: [[1, \"max-w-md\", \"mx-auto\"], [1, \"space-y-4\", 3, \"ngSubmit\", \"formGroup\"], [\"for\", \"vin\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\", \"mb-2\"], [\"id\", \"vin\", \"type\", \"text\", \"formControlName\", \"vin\", \"placeholder\", \"1HGBH41JXMN109186\", \"maxlength\", \"17\", 1, \"vin-input\", \"input-field\", 3, \"input\"], [\"class\", \"mt-1 text-sm text-red-600\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"w-full\", \"btn-primary\", \"disabled:opacity-50\", \"disabled:cursor-not-allowed\", 3, \"disabled\"], [4, \"ngIf\"], [\"class\", \"flex items-center justify-center\", 4, \"ngIf\"], [1, \"mt-1\", \"text-sm\", \"text-red-600\"], [1, \"flex\", \"items-center\", \"justify-center\"], [1, \"ml-2\"]],\n        template: function VinInputComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function VinInputComponent_Template_form_ngSubmit_1_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(2, \"div\")(3, \"label\", 2);\n            i0.ɵɵtext(4, \" \\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 VIN \\u043D\\u043E\\u043C\\u0435\\u0440 \\u0430\\u0432\\u0442\\u043E\\u043C\\u043E\\u0431\\u0438\\u043B\\u044F \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"input\", 3);\n            i0.ɵɵlistener(\"input\", function VinInputComponent_Template_input_input_5_listener($event) {\n              return ctx.onVinInput($event);\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(6, VinInputComponent_div_6_Template, 4, 3, \"div\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"button\", 5);\n            i0.ɵɵtemplate(8, VinInputComponent_span_8_Template, 2, 0, \"span\", 6)(9, VinInputComponent_span_9_Template, 4, 0, \"span\", 7);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            let tmp_1_0;\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"formGroup\", ctx.vinForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.vinForm.get(\"vin\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.vinForm.get(\"vin\")) == null ? null : tmp_1_0.touched));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", ctx.vinForm.invalid || ctx.isLoading);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          }\n        },\n        dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i3.LoadingSpinnerComponent],\n        encapsulation: 2\n      });\n    }\n  }\n  return VinInputComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}