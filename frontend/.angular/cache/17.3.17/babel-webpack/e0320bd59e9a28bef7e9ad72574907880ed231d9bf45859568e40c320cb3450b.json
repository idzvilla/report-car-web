{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction NavbarComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function NavbarComponent_ng_container_8_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.loginWithTelegram());\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 10);\n    i0.ɵɵelement(3, \"path\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5, \"\\u0412\\u043E\\u0439\\u0442\\u0438 \\u0447\\u0435\\u0440\\u0435\\u0437 Telegram\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction NavbarComponent_ng_template_9_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 19);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", ctx_r1.currentUser == null ? null : ctx_r1.currentUser.photoUrl, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r1.currentUser == null ? null : ctx_r1.currentUser.fullName);\n  }\n}\nfunction NavbarComponent_ng_template_9_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 20);\n    i0.ɵɵtext(1, \" Telegram \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NavbarComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 12);\n    i0.ɵɵtemplate(2, NavbarComponent_ng_template_9_img_2_Template, 1, 2, \"img\", 13);\n    i0.ɵɵelementStart(3, \"span\", 14);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, NavbarComponent_ng_template_9_span_5_Template, 2, 0, \"span\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"a\", 16);\n    i0.ɵɵtext(7, \" \\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"a\", 17);\n    i0.ɵɵtext(9, \" \\u0410\\u0434\\u043C\\u0438\\u043D \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function NavbarComponent_ng_template_9_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.logout());\n    });\n    i0.ɵɵtext(11, \" \\u0412\\u044B\\u0439\\u0442\\u0438 \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.currentUser == null ? null : ctx_r1.currentUser.photoUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \\u041F\\u0440\\u0438\\u0432\\u0435\\u0442, \", (ctx_r1.currentUser == null ? null : ctx_r1.currentUser.fullName) || (ctx_r1.currentUser == null ? null : ctx_r1.currentUser.email), \"! \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.currentUser == null ? null : ctx_r1.currentUser.authProvider) === \"telegram\");\n  }\n}\nexport class NavbarComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.currentUser = null;\n    this.isAuthenticated = false;\n  }\n  ngOnInit() {\n    this.authService.currentUser$.subscribe(user => {\n      this.currentUser = user;\n      this.isAuthenticated = !!user;\n    });\n  }\n  goToLogin() {\n    this.router.navigate(['/login']);\n  }\n  goToRegister() {\n    this.router.navigate(['/register']);\n  }\n  loginWithTelegram() {\n    // Открываем Telegram Login Widget в новом окне\n    const telegramUrl = 'https://oauth.telegram.org/auth?bot_id=7427373200&origin=http://localhost:4200&return_to=http://localhost:3000/api/auth/telegram';\n    window.open(telegramUrl, 'telegram-login', 'width=400,height=500');\n  }\n  logout() {\n    this.authService.logout().subscribe({\n      next: () => {\n        this.router.navigate(['/']);\n      },\n      error: error => {\n        console.error('Ошибка выхода:', error);\n        // Всё равно перенаправляем на главную\n        this.router.navigate(['/']);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function NavbarComponent_Factory(t) {\n      return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NavbarComponent,\n      selectors: [[\"app-navbar\"]],\n      decls: 11,\n      vars: 2,\n      consts: [[\"authenticatedMenu\", \"\"], [1, \"bg-white\", \"border-b\", \"border-gray-200\"], [1, \"max-w-7xl\", \"mx-auto\", \"px-4\", \"sm:px-6\", \"lg:px-8\"], [1, \"flex\", \"justify-between\", \"items-center\", \"h-16\"], [1, \"flex\", \"items-center\"], [\"routerLink\", \"/\", 1, \"flex-shrink-0\", \"flex\", \"items-center\"], [1, \"text-2xl\", \"font-bold\", \"text-gray-900\"], [1, \"flex\", \"items-center\", \"space-x-4\"], [4, \"ngIf\", \"ngIfElse\"], [1, \"btn\", \"btn-primary\", \"flex\", \"items-center\", \"space-x-2\", 3, \"click\"], [\"viewBox\", \"0 0 24 24\", \"fill\", \"currentColor\", 1, \"w-4\", \"h-4\"], [\"d\", \"M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm5.568 8.16l-1.61 7.59c-.12.56-.44.7-.9.44l-2.49-1.84-1.2 1.15c-.13.13-.24.24-.49.24l.18-2.56 4.64-4.19c.2-.18-.04-.28-.31-.1l-5.74 3.61-2.47-.77c-.54-.17-.55-.54.11-.8l9.7-3.74c.45-.17.85.1.7.8z\"], [1, \"flex\", \"items-center\", \"space-x-2\"], [\"class\", \"w-8 h-8 rounded-full\", 3, \"src\", \"alt\", 4, \"ngIf\"], [1, \"text-sm\", \"text-gray-700\"], [\"class\", \"text-xs text-blue-600 bg-blue-50 px-2 py-1 rounded-full\", 4, \"ngIf\"], [\"routerLink\", \"/profile\", 1, \"btn\", \"btn-outline\", \"btn-sm\"], [\"routerLink\", \"/admin\", 1, \"btn\", \"btn-outline\", \"btn-sm\"], [1, \"btn\", \"btn-outline\", \"btn-sm\", 3, \"click\"], [1, \"w-8\", \"h-8\", \"rounded-full\", 3, \"src\", \"alt\"], [1, \"text-xs\", \"text-blue-600\", \"bg-blue-50\", \"px-2\", \"py-1\", \"rounded-full\"]],\n      template: function NavbarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"nav\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"a\", 5)(5, \"h1\", 6);\n          i0.ɵɵtext(6, \"CarFax Web\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(7, \"div\", 7);\n          i0.ɵɵtemplate(8, NavbarComponent_ng_container_8_Template, 6, 0, \"ng-container\", 8)(9, NavbarComponent_ng_template_9_Template, 12, 3, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          const authenticatedMenu_r4 = i0.ɵɵreference(10);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isAuthenticated)(\"ngIfElse\", authenticatedMenu_r4);\n        }\n      },\n      dependencies: [i3.NgIf, i2.RouterLink],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵlistener","NavbarComponent_ng_container_8_Template_button_click_1_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","loginWithTelegram","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵproperty","currentUser","photoUrl","ɵɵsanitizeUrl","fullName","ɵɵtemplate","NavbarComponent_ng_template_9_img_2_Template","NavbarComponent_ng_template_9_span_5_Template","NavbarComponent_ng_template_9_Template_button_click_10_listener","_r3","logout","ɵɵadvance","ɵɵtextInterpolate1","email","authProvider","NavbarComponent","constructor","authService","router","isAuthenticated","ngOnInit","currentUser$","subscribe","user","goToLogin","navigate","goToRegister","telegramUrl","window","open","next","error","console","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","decls","vars","consts","template","NavbarComponent_Template","rf","ctx","NavbarComponent_ng_container_8_Template","NavbarComponent_ng_template_9_Template","ɵɵtemplateRefExtractor","authenticatedMenu_r4"],"sources":["/Users/test/Documents/Apps/CarFax Web/frontend/src/app/components/navbar/navbar.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService, User } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  template: `\n    <nav class=\"bg-white border-b border-gray-200\">\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between items-center h-16\">\n          <div class=\"flex items-center\">\n            <a routerLink=\"/\" class=\"flex-shrink-0 flex items-center\">\n              <h1 class=\"text-2xl font-bold text-gray-900\">CarFax Web</h1>\n            </a>\n          </div>\n          \n          <div class=\"flex items-center space-x-4\">\n            <ng-container *ngIf=\"!isAuthenticated; else authenticatedMenu\">\n              <button (click)=\"loginWithTelegram()\" class=\"btn btn-primary flex items-center space-x-2\">\n                <svg class=\"w-4 h-4\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm5.568 8.16l-1.61 7.59c-.12.56-.44.7-.9.44l-2.49-1.84-1.2 1.15c-.13.13-.24.24-.49.24l.18-2.56 4.64-4.19c.2-.18-.04-.28-.31-.1l-5.74 3.61-2.47-.77c-.54-.17-.55-.54.11-.8l9.7-3.74c.45-.17.85.1.7.8z\"/>\n                </svg>\n                <span>Войти через Telegram</span>\n              </button>\n            </ng-container>\n            \n            <ng-template #authenticatedMenu>\n              <div class=\"flex items-center space-x-4\">\n                <div class=\"flex items-center space-x-2\">\n                  <img *ngIf=\"currentUser?.photoUrl\" \n                       [src]=\"currentUser?.photoUrl\" \n                       [alt]=\"currentUser?.fullName\"\n                       class=\"w-8 h-8 rounded-full\">\n                  <span class=\"text-sm text-gray-700\">\n                    Привет, {{ currentUser?.fullName || currentUser?.email }}!\n                  </span>\n                  <span *ngIf=\"currentUser?.authProvider === 'telegram'\" \n                        class=\"text-xs text-blue-600 bg-blue-50 px-2 py-1 rounded-full\">\n                    Telegram\n                  </span>\n                </div>\n                <a routerLink=\"/profile\" class=\"btn btn-outline btn-sm\">\n                  Профиль\n                </a>\n                <a routerLink=\"/admin\" class=\"btn btn-outline btn-sm\">\n                  Админ\n                </a>\n                <button (click)=\"logout()\" class=\"btn btn-outline btn-sm\">\n                  Выйти\n                </button>\n              </div>\n            </ng-template>\n          </div>\n        </div>\n      </div>\n    </nav>\n  `,\n  styles: []\n})\nexport class NavbarComponent implements OnInit {\n  currentUser: User | null = null;\n  isAuthenticated = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.authService.currentUser$.subscribe(user => {\n      this.currentUser = user;\n      this.isAuthenticated = !!user;\n    });\n  }\n\n  goToLogin(): void {\n    this.router.navigate(['/login']);\n  }\n\n  goToRegister(): void {\n    this.router.navigate(['/register']);\n  }\n\n  loginWithTelegram(): void {\n    // Открываем Telegram Login Widget в новом окне\n    const telegramUrl = 'https://oauth.telegram.org/auth?bot_id=7427373200&origin=http://localhost:4200&return_to=http://localhost:3000/api/auth/telegram';\n    window.open(telegramUrl, 'telegram-login', 'width=400,height=500');\n  }\n\n  logout(): void {\n    this.authService.logout().subscribe({\n      next: () => {\n        this.router.navigate(['/']);\n      },\n      error: (error) => {\n        console.error('Ошибка выхода:', error);\n        // Всё равно перенаправляем на главную\n        this.router.navigate(['/']);\n      }\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}