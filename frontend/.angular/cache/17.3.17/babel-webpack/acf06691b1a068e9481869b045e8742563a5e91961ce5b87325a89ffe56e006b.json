{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AdminGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    const user = this.authService.getCurrentUser();\n    // В реальном приложении здесь бы была проверка роли админа\n    // Для демонстрации просто проверяем, что пользователь аутентифицирован\n    if (user) {\n      return true;\n    } else {\n      this.router.navigate(['/']);\n      return false;\n    }\n  }\n  static {\n    this.ɵfac = function AdminGuard_Factory(t) {\n      return new (t || AdminGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AdminGuard,\n      factory: AdminGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AdminGuard","constructor","authService","router","canActivate","user","getCurrentUser","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["/Users/test/Documents/Apps/CarFax Web/frontend/src/app/guards/admin.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  canActivate(): boolean {\n    const user = this.authService.getCurrentUser();\n    \n    // В реальном приложении здесь бы была проверка роли админа\n    // Для демонстрации просто проверяем, что пользователь аутентифицирован\n    if (user) {\n      return true;\n    } else {\n      this.router.navigate(['/']);\n      return false;\n    }\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,UAAU;EACrBC,YACUC,WAAwB,EACxBC,MAAc;IADd,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;EACb;EAEHC,WAAWA,CAAA;IACT,MAAMC,IAAI,GAAG,IAAI,CAACH,WAAW,CAACI,cAAc,EAAE;IAE9C;IACA;IACA,IAAID,IAAI,EAAE;MACR,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACF,MAAM,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC3B,OAAO,KAAK;;EAEhB;;;uBAjBWP,UAAU,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAVb,UAAU;MAAAc,OAAA,EAAVd,UAAU,CAAAe,IAAA;MAAAC,UAAA,EAFT;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}