{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { cn } from '../../../../lib/utils';\nimport * as i0 from \"@angular/core\";\nexport class InputComponent {\n  constructor() {\n    this.type = 'text';\n    this.placeholder = '';\n    this.className = '';\n    this.disabled = false;\n    this.value = '';\n    this.onChange = value => {};\n    this.onTouched = () => {};\n    this.cn = cn;\n  }\n  onInput(event) {\n    const target = event.target;\n    this.value = target.value;\n    this.onChange(this.value);\n  }\n  writeValue(value) {\n    this.value = value || '';\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  static {\n    this.ɵfac = function InputComponent_Factory(t) {\n      return new (t || InputComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: InputComponent,\n      selectors: [[\"app-input\"]],\n      inputs: {\n        type: \"type\",\n        placeholder: \"placeholder\",\n        className: \"className\",\n        disabled: \"disabled\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => InputComponent),\n        multi: true\n      }]), i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 6,\n      consts: [[3, \"input\", \"blur\", \"type\", \"placeholder\", \"disabled\", \"value\"]],\n      template: function InputComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"input\", 0);\n          i0.ɵɵlistener(\"input\", function InputComponent_Template_input_input_0_listener($event) {\n            return ctx.onInput($event);\n          })(\"blur\", function InputComponent_Template_input_blur_0_listener() {\n            return ctx.onTouched();\n          });\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.cn(\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\", ctx.className));\n          i0.ɵɵproperty(\"type\", ctx.type)(\"placeholder\", ctx.placeholder)(\"disabled\", ctx.disabled)(\"value\", ctx.value);\n        }\n      },\n      dependencies: [CommonModule],\n      styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbnB1dC5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy91aS9pbnB1dC9pbnB1dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsZ0tBQWdLIiwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["forwardRef","CommonModule","NG_VALUE_ACCESSOR","cn","InputComponent","constructor","type","placeholder","className","disabled","value","onChange","onTouched","onInput","event","target","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","selectors","inputs","standalone","features","i0","ɵɵProvidersFeature","provide","useExisting","multi","ɵɵStandaloneFeature","decls","vars","consts","template","InputComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","InputComponent_Template_input_input_0_listener","$event","InputComponent_Template_input_blur_0_listener","ɵɵelementEnd","ɵɵclassMap","ɵɵproperty","styles"],"sources":["/Users/test/Documents/Apps/CarFax Web/frontend/src/app/components/ui/input/input.component.ts"],"sourcesContent":["import { Component, Input, forwardRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { cn } from '../../../../lib/utils';\n\n@Component({\n  selector: 'app-input',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <input\n      [class]=\"cn(\n        'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n        className\n      )\"\n      [type]=\"type\"\n      [placeholder]=\"placeholder\"\n      [disabled]=\"disabled\"\n      [value]=\"value\"\n      (input)=\"onInput($event)\"\n      (blur)=\"onTouched()\"\n    />\n  `,\n  styleUrls: ['./input.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputComponent implements ControlValueAccessor {\n  @Input() type: string = 'text';\n  @Input() placeholder: string = '';\n  @Input() className: string = '';\n  @Input() disabled: boolean = false;\n\n  value: string = '';\n  onChange = (value: string) => {};\n  onTouched = () => {};\n\n  cn = cn;\n\n  onInput(event: Event) {\n    const target = event.target as HTMLInputElement;\n    this.value = target.value;\n    this.onChange(this.value);\n  }\n\n  writeValue(value: string): void {\n    this.value = value || '';\n  }\n\n  registerOnChange(fn: (value: string) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n"],"mappings":"AAAA,SAA2BA,UAAU,QAAQ,eAAe;AAC5D,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAA+BC,iBAAiB,QAAQ,gBAAgB;AACxE,SAASC,EAAE,QAAQ,uBAAuB;;AA6B1C,OAAM,MAAOC,cAAc;EA3B3BC,YAAA;IA4BW,KAAAC,IAAI,GAAW,MAAM;IACrB,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAAC,QAAQ,GAAY,KAAK;IAElC,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAID,KAAa,IAAI,CAAE,CAAC;IAChC,KAAAE,SAAS,GAAG,MAAK,CAAE,CAAC;IAEpB,KAAAT,EAAE,GAAGA,EAAE;;EAEPU,OAAOA,CAACC,KAAY;IAClB,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAA0B;IAC/C,IAAI,CAACL,KAAK,GAAGK,MAAM,CAACL,KAAK;IACzB,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACD,KAAK,CAAC;EAC3B;EAEAM,UAAUA,CAACN,KAAa;IACtB,IAAI,CAACA,KAAK,GAAGA,KAAK,IAAI,EAAE;EAC1B;EAEAO,gBAAgBA,CAACC,EAA2B;IAC1C,IAAI,CAACP,QAAQ,GAAGO,EAAE;EACpB;EAEAC,iBAAiBA,CAACD,EAAc;IAC9B,IAAI,CAACN,SAAS,GAAGM,EAAE;EACrB;EAEAE,gBAAgBA,CAACC,UAAmB;IAClC,IAAI,CAACZ,QAAQ,GAAGY,UAAU;EAC5B;;;uBAhCWjB,cAAc;IAAA;EAAA;;;YAAdA,cAAc;MAAAkB,SAAA;MAAAC,MAAA;QAAAjB,IAAA;QAAAC,WAAA;QAAAC,SAAA;QAAAC,QAAA;MAAA;MAAAe,UAAA;MAAAC,QAAA,GAAAC,EAAA,CAAAC,kBAAA,CARd,CACT;QACEC,OAAO,EAAE1B,iBAAiB;QAC1B2B,WAAW,EAAE7B,UAAU,CAAC,MAAMI,cAAc,CAAC;QAC7C0B,KAAK,EAAE;OACR,CACF,GAAAJ,EAAA,CAAAK,mBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UApBCX,EAAA,CAAAa,cAAA,eAWE;UADAb,EADA,CAAAc,UAAA,mBAAAC,+CAAAC,MAAA;YAAA,OAASJ,GAAA,CAAAzB,OAAA,CAAA6B,MAAA,CAAe;UAAA,EAAC,kBAAAC,8CAAA;YAAA,OACjBL,GAAA,CAAA1B,SAAA,EAAW;UAAA,EAAC;UAVtBc,EAAA,CAAAkB,YAAA,EAWE;;;UAVAlB,EAAA,CAAAmB,UAAA,CAAAP,GAAA,CAAAnC,EAAA,iWAAAmC,GAAA,CAAA9B,SAAA,EAGE;UAIFkB,EAHA,CAAAoB,UAAA,SAAAR,GAAA,CAAAhC,IAAA,CAAa,gBAAAgC,GAAA,CAAA/B,WAAA,CACc,aAAA+B,GAAA,CAAA7B,QAAA,CACN,UAAA6B,GAAA,CAAA5B,KAAA,CACN;;;qBAVTT,YAAY;MAAA8C,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}