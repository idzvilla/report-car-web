import { Test, TestingModule } from '@nestjs/testing';
import { INestApplication } from '@nestjs/common';
import * as request from 'supertest';
import { AppModule } from '../src/app.module';

describe('AppController (e2e)', () => {
  let app: INestApplication;

  beforeEach(async () => {
    const moduleFixture: TestingModule = await Test.createTestingModule({
      imports: [AppModule],
    }).compile();

    app = moduleFixture.createNestApplication();
    await app.init();
  });

  afterEach(async () => {
    await app.close();
  });

  it('/api (GET)', () => {
    return request(app.getHttpServer())
      .get('/api')
      .expect(404);
  });

  it('/api/v1/auth/register (POST)', () => {
    return request(app.getHttpServer())
      .post('/api/v1/auth/register')
      .send({
        email: 'test@example.com',
        password: 'password123',
        fullName: 'Test User',
      })
      .expect(201)
      .expect((res) => {
        expect(res.body).toHaveProperty('user');
        expect(res.body).toHaveProperty('message');
      });
  });

  it('/api/v1/auth/register (POST) - validation error', () => {
    return request(app.getHttpServer())
      .post('/api/v1/auth/register')
      .send({
        email: 'invalid-email',
        password: '123',
        fullName: 'T',
      })
      .expect(400);
  });

  it('/api/v1/reports/request (POST) - without auth', () => {
    return request(app.getHttpServer())
      .post('/api/v1/reports/request')
      .send({
        vin: '1HGBH41JXMN109186',
      })
      .expect(401);
  });

  it('/api/v1/payments/create (POST) - without auth', () => {
    return request(app.getHttpServer())
      .post('/api/v1/payments/create')
      .send({
        paymentType: 'single',
      })
      .expect(401);
  });
});
